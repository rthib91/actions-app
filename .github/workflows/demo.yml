# This is a basic workflow to help you get started with Actions
name: Demo

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'name'
        required: true
        default: 'remi'
      home:
        description: 'home dir'
        required: true
        default: /Users/remi

jobs:
  # Docker build
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Dockerfile
        run: docker build .

  # Bash script with env
  script:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run script
        env:
          HELLO: "hello"
          WORLD: "world"
        run: ./script.sh

  # Job needs earlier job
  # Uses secret from GitHub repository
  uses-secret:
    needs: script
    runs-on: macos-11.0
    steps:
      - name: secret
        uses: actions/checkout@v2
      - name: run secret
        env:
          SUPER_SECRET: ${{ secrets.SECRET }}
        run: ./secret.sh "$SUPER_SECRET" > output.txt
      - name: artifact
        uses: actions/upload-artifact@v1
        with:
          name: secret-output
          path: output.txt

  # Windows executes some npm/node
  npm-node-version:
    runs-on: windows-latest
    steps:
      - uses: actions/setup-node@v1
      - run: npm --version
      - run: node --version

  # Sharing data between jobs
  sharing-data:
    runs-on: ubuntu-latest
    needs: uses-secret
    steps:
      - name: sharing-data
        uses: actions/download-artifact@v2
        with:
          name: secret-output
      - name: cat shared data
        shell: bash
        run: cat output.txt

  # Using default ENV variables
  default-env:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "$GITHUB_ACTOR started this script"
          echo "$HOME is my home"
          echo "$GITHUB_REPOSITORY is the repository name"
          echo "$GITHUB_REF is the branch that triggered the workflow"

  # Creates outputs for next job
  create-outputs:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
    - id: step1
      run: echo "::set-output name=test::hello"
    - id: step2
      run: echo "::set-output name=test::world"

  # Uses previous outputs
  using-outputs:
    runs-on: ubuntu-latest
    needs: create-outputs
    steps:
    - run: echo ${{needs.create-outputs.outputs.output1}} ${{needs.create-outputs.outputs.output2}}

  # Inputs from manual and cURL workflow trigger
  manually-triggered:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Hello ${{ github.event.inputs.name}} !"
        echo "Is your home really ${{ github.event.inputs.home }} ?"
